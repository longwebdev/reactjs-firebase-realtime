{"version":3,"sources":["components/layout/SignedInLink.js","store/actions/authActions.js","components/layout/SignedOutLink.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLink","Component","state","firebase","links","uid","layout_SignedInLink","layout_SignedOutLink","Link","Notifications","notifications","map","item","index","key","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","toString","calendar","ProjectList","projects","id","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","Redirect","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownPros","match","params","data","SignIn","_Component","_getPrototypeOf2","_this","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","email","password","handleChange","e","setState","defineProperty","target","value","handleSubmit","preventDefault","signIn","inherits","createClass","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","BrowserRouter","layout_Navbar","Switch","Route","path","exact","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","undefined","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0f201ade.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authActions';\r\nconst SignedInLink = (props) => {\r\n    \r\n        return (\r\n            <ul className=\"right\">\r\n                <li><NavLink to=\"/create\">New Project</NavLink></li>\r\n                <li><button className=\"btn btn-info\" onClick={props.signOut}>Log Out</button></li>\r\n                <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\r\n            </ul>\r\n        );\r\n    \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => {\r\n            dispatch(signOut())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLink);","export const signIn = (credentials) => {\r\n    return  (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then( () => {\r\n            dispatch({ type: 'LOGIN_SUCCESS'});\r\n        }).catch( (err) => {\r\n            dispatch({ type: 'LOGIN_ERROR', err });\r\n        });\r\n    } \r\n}\r\n\r\nexport const signOut =  () => {\r\n    return  (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then( () => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n        });\r\n    } \r\n} \r\n\r\nexport const signUp = (newUser) => {\r\n    return  (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then( (resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0] \r\n            })\r\n        }).then( () => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS'});\r\n        }).catch( (err) => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err});\r\n        })\r\n    } \r\n}","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nclass SignedOutLink extends Component {\r\n    render() {\r\n        return (\r\n            <ul className=\"right\">\r\n                <li><NavLink to=\"/signup\">Sign Up</NavLink></li>\r\n                <li><NavLink to=\"/signin\">Login</NavLink></li>\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignedOutLink;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLink from './SignedInLink';\r\nimport SignedOutLink from './SignedOutLink';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n   \r\n    const links = auth.uid ? <SignedInLink profile={profile}/> : <SignedOutLink/>;\r\n        return (\r\n            <nav className=\"nav-wrapper grey darken-3\">\r\n                <div className=\"container\">\r\n                    <Link to=\"/\" className=\"brand-logo\">Cleaning Jobs Plan </Link>\r\n                    { links }\r\n                </div>\r\n            </nav>\r\n        );\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile : state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);    ","import React from 'react';\r\nimport moment from 'moment';\r\nconst Notifications = (props) => {\r\n    const { notifications } = props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        { notifications && notifications.map( (item, index) => {\r\n                            return (\r\n                                <li key={index}>\r\n                                    <span className=\"pink-text\">\r\n                                        {item.user}\r\n                                    </span>\r\n                                    <span >\r\n                                        {item.content}\r\n                                    </span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Notifications;","import React from 'react';\r\nimport moment from 'moment';\r\nconst ProjectSummary = ({project}) => {\r\n    \r\n        return (\r\n            <div className=\"card z-depth-0 project-summary\">\r\n                <div className=\"card-content gray-text text-darken-3\">\r\n                    <span className=\"card-title\">\r\n                        {project.title}\r\n                        </span>\r\n                    <p>\r\n                        Posted by {project.authorFirstName} {project.authorLastName}\r\n                        </p>\r\n                    <p className=\"grey-text\">\r\n                        {moment(project.createdAt.toDate().toString()).calendar()}\r\n                        </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    \r\n}\r\n\r\nexport default ProjectSummary;","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom';\r\nconst ProjectList = ({projects}) => {\r\n   \r\n        return (\r\n            <div className=\"project-list section\">\r\n                \r\n                {projects && projects.map( (project) => {\r\n                        return (\r\n                            <Link to={'/project/' + project.id} key={project.id}>\r\n                            <ProjectSummary\r\n                            project={project}\r\n                            \r\n                            />\r\n                            </Link>\r\n                        );\r\n                })}\r\n\r\n                \r\n            </div>\r\n        );\r\n    \r\n}\r\n\r\nexport default ProjectList;","import React, { Component } from 'react';\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        const { projects, auth, notifications } = this.props;\r\n        if(!auth.uid) return <Redirect to=\"/signin\" />\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                    <ProjectList projects={projects}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                    <Notifications notifications={notifications}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    //console.log(state);\r\n    return {\r\n       projects : state.firestore.ordered.projects,\r\n       auth: state.firebase.auth,\r\n       notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\r\n    ])\r\n)(Dashboard);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\nconst ProjectDetails = (props) => {\r\n    const { project, auth } = props;\r\n    if(!auth.uid) return <Redirect to=\"/signin\" />\r\n    if (project) {\r\n        return (\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">\r\n                            {project.title}\r\n                        </span>\r\n                        <p>\r\n                            {project.content}\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                        <div>{moment(project.createdAt.toDate().toString()).calendar()}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading project...</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = (state, ownPros) => {\r\n    const id = ownPros.match.params.id;\r\n    // lấy theo id\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null;\r\n    //đã thấy được project theo id\r\n    // sau đó set nó vào state\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(ProjectDetails);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { signIn }  from '../../store/actions/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport class SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    };\r\n    handleChange =  (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        });\r\n    } \r\n    handleSubmit =  (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    } \r\n  render() {\r\n      const { authError, auth  } = this.props;\r\n      if(auth.uid) return <Redirect to=\"/\" />\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n            <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input type=\"email\" id=\"email\" onChange={this.handleChange}></input>\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input type=\"password\" id=\"password\" onChange={this.handleChange}></input>\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n                <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                <div className=\"red-text center\">\r\n                    { authError ? <p>{authError}</p> : null }\r\n                </div>\r\n            </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => {\r\n            dispatch(signIn(creds));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { signUp } from '../../store/actions/authActions';\r\nexport class SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    };\r\n    handleChange =  (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        });\r\n    } \r\n    handleSubmit =  (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state);\r\n    } \r\n  render() {\r\n    const {  auth, authError  } = this.props;\r\n    if(auth.uid) return <Redirect to=\"/\" />\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n            <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input type=\"email\" id=\"email\" onChange={this.handleChange}></input>\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input type=\"password\" id=\"password\" onChange={this.handleChange}></input>\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"lastName\">lastName</label>\r\n                <input type=\"text\" id=\"lastName\" onChange={this.handleChange}></input>\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"firstName\">First Name</label>\r\n                <input type=\"text\" id=\"firstName\" onChange={this.handleChange}></input>\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n                <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                <div className=\"red-text center\">\r\n                    { authError ? <p>{authError}</p> : null }\r\n                </div>\r\n            </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => {\r\n            dispatch(signUp(newUser))\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React, { Component } from 'react';\r\nimport { createProject } from '../../store/actions/projectActions';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport class CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    };\r\n    handleChange =  (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        });\r\n    } \r\n    handleSubmit =  (e) => {\r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/');\r\n    } \r\n  render() {\r\n      const { auth } = this.props;\r\n      if(!auth.uid) return <Redirect to=\"/signin\" />\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n            <h5 className=\"grey-text text-darken-3\">Create new Project</h5>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"title\">Title</label>\r\n                <input type=\"text\" id=\"title\" onChange={this.handleChange}></input>\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"content\">Project Content</label>\r\n                <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n                <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n            </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        createProject: (project) => {\r\n            dispatch(createProject(project))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","export const createProject = (project) => {\r\n    return (dispatch, getState, {getFirestore}) => {\r\n      // make async call to database\r\n      const firestore = getFirestore();\r\n      const profile = getState().firebase.profile;\r\n      const authorId = getState().firebase.auth.uid;\r\n      firestore.collection('projects').add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId: authorId,\r\n        createdAt: new Date()\r\n      }).then(() => {\r\n        dispatch({ type: 'CREATE_PROJECT_SUCCESS' });\r\n      }).catch(err => {\r\n        dispatch({ type: 'CREATE_PROJECT_ERROR' }, err);\r\n      });\r\n    }\r\n  };","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar/>\n          <Switch>\n            <Route path=\"/\" exact component={Dashboard} />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n        console.log('login error'); \r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            };\r\n\r\n        case 'LOGIN_SUCCESS':\r\n        console.log('login success');  \r\n        return {\r\n            ...state,\r\n            authError: null\r\n        } \r\n\r\n        case 'SIGNOUT_SUCCESS':\r\n        console.log('signout success');\r\n        return state; \r\n\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error'); \r\n                return {\r\n                    ...state,\r\n                    authError: action.err.message\r\n                };    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default authReducer;","const initState = {\r\n    projects: [\r\n        {id: '1', title: 'help me find peach', content: 'blah blah blah'},\r\n        {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\r\n        {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\r\n    ]\r\n};\r\n\r\nconst projectReducer =  (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'CREATE_PROJECT':\r\n        console.log('create project', action.project);\r\n        return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.err);\r\n            return state;\r\n        default:\r\n        return state;    \r\n    }\r\n} \r\n\r\nexport default projectReducer;","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nvar config = {\r\n    apiKey: \"AIzaSyDLDwp9aLwWGceXaJCoLHmsHZq3OJtutlY\",\r\n    authDomain: \"long-demo-marioplan.firebaseapp.com\",\r\n    databaseURL: \"https://long-demo-marioplan.firebaseio.com\",\r\n    projectId: \"long-demo-marioplan\",\r\n    storageBucket: \"long-demo-marioplan.appspot.com\",\r\n    messagingSenderId: \"712999305798\"\r\n  };\r\n\r\nfirebase.initializeApp(config);\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users' ,attachAuthIsReady: true }), // redux binding for firebase\n    reduxFirestore(fbConfig ) // redux bindings for firestore\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n  serviceWorker.unregister();\n});\n\n\n\n"],"sourceRoot":""}